@model ASPAssignment2.Models.VideoGame

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>VideoGame</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Genre.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genre.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Developer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Developer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Publisher)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.VideoGameId }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<h2>Reviews</h2>

@if (Request.IsAuthenticated)
{
    <div class="form-group">
        <input type="hidden" id="ajaxVideoGameId" value="@Model.VideoGameId" />

        <input type="hidden" id="ajaxReviewId" value="@((Model.Reviews != null && Model.Reviews.Count > 0) ? Model.Reviews.Count : 0)" />

        <label for="subject">Subject:</label>
        <input type="text" id="ajaxSubject" name="subject" pattern=".{1}" value="" />

        <label for="stars">Stars:</label>
        <input type="number" id="ajaxStars" name="stars" min="1" max="5" value="" />

        <label for="review">Review:</label>
        <input type="text" id="ajaxReview" name="review" pattern=".{1}" value="" />

        <button id="ajaxRequest">Post Review</button>
    </div>
    <template id="template-form">
        <tr>
            <td id="template-name"></td>
            <td id="template-subject"></td>
            <td id="template-review"></td>
            <td id="template-stars"></td>
            <td><a href="" id="template-delete">Delete</a></td>
        </tr>
    </template>
    <script>
        //Ajax request
        function OnSuccess(response) {
            if (response == "False") {
                alert("Invalid form entries!");
            }
            else {
                let table = document.querySelector("#reviewBody");
                let template = document.querySelector("#template-form");
                let temp = template.content.cloneNode(true);
                let data = JSON.parse(response);
                temp.querySelector("#template-name").textContent = data["Name"];
                temp.querySelector("#template-subject").textContent = data["Subject"];
                temp.querySelector("#template-review").textContent = data["Review"];
                temp.querySelector("#template-stars").textContent = data["Stars"];
                temp.querySelector("#template-delete").href = "/VideoGames/DeleteReview?id="+data["VideoGameId"]+"&reviewid="+data["ReviewsId"];
                table.appendChild(temp);
            }
        }
        $("#ajaxRequest").click(function () {
            let videogameid = document.querySelector("#ajaxVideoGameId").value;
            let reviewid = document.querySelector("#ajaxReviewId").value;
            let subject = document.querySelector("#ajaxSubject").value;
            let stars = document.querySelector("#ajaxStars").value;
            let review = document.querySelector("#ajaxReview").value;

            //Greasy form validation
            if (videogameid == null || reviewid == null || subject == null || stars == null || review == null || isNaN(stars)) {
                alert("Invalid form entries!");
            }
            else {
                $.ajax({
                    traditional: true,
                    type: "POST",
                    url: "AddReview",
                    cache: false,
                    data: {
                        videogameid: videogameid,
                        reviewid: reviewid,
                        subject: subject,
                        stars: stars,
                        review: review
                    },
                    //contentType: "application/json",
                    success: OnSuccess
                });
                document.querySelector("#ajaxSubject").value = "";
                document.querySelector("#ajaxStars").value = "";
                document.querySelector("#ajaxReview").value = "";
            }
        });
    </script>
}

<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Subject
        </th>
        <th>
            Review
        </th>
        <th>
            Stars
        </th>
        @if (Request.IsAuthenticated)
        {
            <th>

            </th>
        }
    </tr>
    <tbody id="reviewBody">
        <!-- If the current video game has reviews, and there are atleast 1 review available... -->
        @if (Model.Reviews != null && Model.Reviews.Count() > 0)
        {
            <!-- ...Loop through each review and output the appropriate data -->
            foreach (var item in Model.Reviews)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Subject)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Review)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stars)
                    </td>
                    @if (Request.IsAuthenticated)
                    {
                        <td>
                            @Html.ActionLink("Delete", "DeleteReview", new { id = Model.VideoGameId, reviewid = item.ReviewsId })
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>
